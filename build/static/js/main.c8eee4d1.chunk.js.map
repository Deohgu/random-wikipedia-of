{"version":3,"sources":["App.styled.js","components/TitleInput/TitleInput.styled.js","components/TitleInput/TitleInput.jsx","components/Recommendations/Recommendations.styled.js","components/Recommendations/Recommendations.jsx","utils/recommendedFunc.js","utils/fetchList.js","utils/randomPicker.js","utils/newCat.js","utils/anotherSubCat.js","App.js","index.js"],"names":["AppContainer","styled","div","GlobalStyle","createGlobalStyle","TitleContainer","Title","h1","RandomPage","a","TitleForm","form","TitleInputField","input","TitleInput","inputData","fetchedData","fetchHandler","inputFocus","onSubmit","e","preventDefault","action","type","placeholder","value","onChange","target","autoFocus","ref","picked","href","replace","RecommContainer","button","Recommendations","recommendedArr","focusHandler","length","map","curr","index","onClick","key","recommendedFunc","data","fetch","recomendedFetch","json","jsonData","parsedData","push","fetchList","category","url","articles","subCats","response","ok","message","status","Error","categorymembers","query","element","title","randomPicker","randomPageIndex","Math","floor","random","randomSubCatIndex","newCat","then","catch","error","console","log","articlesSubcats","anotherCat","indexOfanotherCat","indexOf","splice","newData","concat","indexOfPicked","anotherSubCat","fetchedDataCopy","App","useState","setInputData","prevInputData","setPrevInputData","setRecommendedArr","setFetchedData","submitData","dataToFetch","shouldSubmit","dataTransf","useRef","current","focus","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8eee4d1.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from 'styled-components'\n\nexport const AppContainer = styled.div`\n  font-family: \"Oswald\";\n  font-size: 45px;\n  font-weight: 700;\n\n  margin: 30px auto 0 auto;\n  border-left: 10px solid black;\n  padding-left: 20px;\n  width: 265px;\n\n  @media (min-width: 700px) {\n    margin-top: 100px;\n  }\n`\n\nexport const GlobalStyle = createGlobalStyle`\n  /* http://meyerweb.com/eric/tools/css/reset/ \n    v2.0 | 20110126\n    License: none (public domain)\n  */\n\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed, \n  figure, figcaption, footer, header, hgroup, \n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure, \n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  body {\n    background-color: rgb(255, 216, 165);\n  }\n`\n","import styled from 'styled-components'\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n`\n\nexport const Title = styled.h1`\n  font-family: \"Oswald\";\n  text-transform: uppercase;\n  word-spacing: 1px;\n\n  letter-spacing: 0.1px;\n\n  &:last-child {\n    margin: 0;\n  }\n`\n\nexport const RandomPage = styled.a`\n  font-style: italic; \n`\n\nexport const TitleForm = styled.form`\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  flex-wrap: wrap;\n\n  width: 100%;\n`\n\nexport const TitleInputField = styled.input`\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  text-transform: uppercase;\n\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid black;\n\n  width: 100%;\n  height: 40px;\n  padding: 0;\n\n  &:focus {\n    outline: none;\n  }\n`\n","import React from 'react'\n\nimport { TitleContainer, Title, RandomPage, TitleForm, TitleInputField } from './TitleInput.styled'\n\nexport const TitleInput = ({\n  inputData,\n  fetchedData,\n  fetchHandler,\n  inputFocus\n}) => {\n  // Content before and after category is picked\n  const toDisplayConditionally = () => {\n    if (fetchedData.picked === 'Random') {\n      return (\n        <Title>\n          YOU WILL BE PROVIDED A RANDOM ARTICLE.\n        </Title>\n      )\n    } else {\n      return (\n        <Title>\n          YOU HAVE THE linked{' '}\n          <RandomPage\n            href={'https://en.wikipedia.org/wiki/' + fetchedData.picked.replace(/[\" \"]/g, '_')}\n          >\n            {fetchedData.picked}\n          </RandomPage>\n          {' '}ARTICLE.\n        </Title>\n      )\n    }\n  }\n\n  return (\n    <TitleContainer>\n      <Title>WITHIN THE WIKIPEDIA CATEGORY OF</Title>\n      <TitleForm\n        onSubmit={(e) => {\n          e.preventDefault()\n          fetchHandler(inputData, true)\n        }}\n      >\n        <TitleInputField\n          action=''\n          type='text'\n          placeholder=''\n          value={inputData}\n          onChange={(e) => {\n            fetchHandler(e.target.value, false) // fetchHandler(..., false) runs but does not call submitData\n          }} // fetches recommendations when a new character is inserted\n          autoFocus\n          ref={inputFocus}\n        />\n      </TitleForm>\n      {toDisplayConditionally()}\n    </TitleContainer>\n  )\n}\n","import styled from 'styled-components'\n\nexport const RecommContainer = styled.button`\n  display: flex;\n  flex-direction: column;\n  background-color: rgb(245, 209, 162);\n\n  border: none;\n  padding: 8px 12px;\n  width: 100%;\n\n  font-size: 20px;\n\n  &:first-child {\n  margin-top: 20px;\n}\n\n  &:not(:last-child) {\n  border: 8px solid rgb(255, 219, 172);\n  border-left: 0;\n  border-right: 0;\n  border-top: 0;\n}\n\n`\n","import React from 'react'\nimport { RecommContainer } from './Recommendations.styled'\n\nexport const Recommendations = ({\n  recommendedArr,\n  fetchHandler,\n  focusHandler\n}) => {\n  return (\n    <div>\n      {recommendedArr.length > 0 &&\n          recommendedArr.map((curr, index) => (\n            <RecommContainer\n              onClick={async () => {\n                fetchHandler(curr, true)\n                focusHandler()\n              }}\n              key={`recommended${index}`}\n            >\n              {curr}\n            </RecommContainer>\n          ))}\n    </div>\n  )\n}\n","// Fetches existing categories related to the current input to recommend\nexport const recommendedFunc = async (data) => {\n  const recomendedFetch = await fetch(\n    `https://en.wikipedia.org/w/api.php?action=opensearch&format=json&limit=6&namespace=14&suggest&search=${data}&origin=*`\n  )\n  const jsonData = await recomendedFetch.json()\n  const parsedData = []\n  await jsonData[1].map((curr) =>\n    parsedData.push(curr.replace(/^Category:/, ''))\n  )\n  return parsedData\n}\n","export const fetchList = async (category) => {\n  const url = `https://en.wikipedia.org/w/api.php?action=query&list=categorymembers&cmtitle=Category:${category.replace(\n    /[\" \"]/g,\n    '_'\n  )}&cmprop=title|type&format=json&cmlimit=500&cmtype=page|subcat&origin=*` // cannot lower case URLs, Wikipedia categories are case sensitive\n  const fetchedData = { articles: [], subCats: [] }\n  const response = await fetch(url)\n\n  if (!response.ok) { // promise returns error\n    const message = `An error has occured: ${response.status}`\n    throw new Error(message)\n  } else {\n    const {\n      query: { categorymembers }\n    } = await response.json()\n\n    for (const element of categorymembers) {\n      if (element.type === 'page') {\n        fetchedData.articles.push(element.title.replace(/[\" \"]/g, '_')) // articles/pages to pages array\n      } else {\n        fetchedData.subCats.push(\n          element.title.replace(/Category:/g, '').replace(/[\" \"]/g, '_') // categories of main category/subCats to subCats array\n        )\n      }\n    }\n    return fetchedData\n  }\n}\n","// Random article in pages\nexport const randomPicker = (fetchedData, type) => {\n  if (type === 'article') {\n    const randomPageIndex = Math.floor(\n      Math.random() * { ...fetchedData }.articles.length\n    )\n    const randomArticle = { ...fetchedData }.articles[randomPageIndex].replace(/[\"_\"]/g, ' ')\n\n    return randomArticle // Returns article to be used.\n  } else if (type === 'subCats') {\n    const randomSubCatIndex = Math.floor(\n      Math.random() * { ...fetchedData }.subCats.length\n    )\n    const randomSubCat = { ...fetchedData }.subCats[randomSubCatIndex]\n\n    return randomSubCat // Returns subCats to be used.\n  }\n}\n","import { fetchList } from './fetchList'\nimport { randomPicker } from './randomPicker'\n\n// Called when a new category is entered\nexport const newCat = async (category) => {\n  // fetches articles and subCats\n  // articlesSubcats = { articles: [...], subCats: [...] }\n  const articlesSubcats = await fetchList(category)\n    .then((parsedData) => parsedData)\n    .catch((error) => console.log(error))\n\n  // Can be improved by somewhat calling anotherSubCat\n  // If depth of 2 - https://github.com/Deohgu/random-wikipedia-of/issues/14 /////////\n  const anotherCat = randomPicker(articlesSubcats, 'subCats') // a random category to add more data\n\n  // Removing the category so that it won't be re-picked\n  const indexOfanotherCat = articlesSubcats.subCats.indexOf(anotherCat)\n  articlesSubcats.subCats.splice(indexOfanotherCat, 1)\n\n  const newData = await fetchList(anotherCat)\n    .then((parsedData) => parsedData)\n    .catch((error) => error)\n\n  articlesSubcats.articles = articlesSubcats.articles.concat(newData.articles) // adds more articles to original from picked category\n  articlesSubcats.subCats = articlesSubcats.subCats.concat(newData.subCats) // adds more categories to original from picked category\n  /// /////////////////////////////////////////////////////////////////////////////////\n\n  articlesSubcats.picked = randomPicker(articlesSubcats, 'article') // picks an article for the user\n\n  // Removing the article so that it won't be re-picked\n  const indexOfPicked = articlesSubcats.articles.indexOf(articlesSubcats.picked)\n  articlesSubcats.articles.splice(indexOfPicked, 1)\n\n  return articlesSubcats // {picked: \"\", articles: [], subCats: []}\n}\n","import { fetchList } from './fetchList'\nimport { randomPicker } from './randomPicker'\n\n// Called when a category is already entered but user wants another result\nexport const anotherSubCat = async (fetchedData) => {\n  const fetchedDataCopy = { ...fetchedData }\n  const anotherCat = randomPicker(fetchedDataCopy, 'subCats') // a random category to add more data\n\n  // Removing the category so that it won't be re-picked\n  const indexOfanotherCat = fetchedDataCopy.subCats.indexOf(anotherCat)\n  fetchedDataCopy.subCats.splice(indexOfanotherCat, 1)\n\n  const newData = await fetchList(anotherCat)\n    .then((parsedData) => parsedData)\n    .catch((error) => console.log(error))\n\n  fetchedDataCopy.articles = fetchedDataCopy.articles.concat(newData.articles) // adds more articles to original from picked category\n  fetchedDataCopy.subCats = fetchedDataCopy.subCats.concat(newData.subCats) // adds more categories to original from picked category\n\n  fetchedDataCopy.picked = randomPicker(fetchedDataCopy, 'article') // picks an article for the user\n\n  // Removing the article so that it won't be re-picked\n  const indexOfPicked = fetchedDataCopy.articles.indexOf(fetchedDataCopy.picked)\n  fetchedDataCopy.articles.splice(indexOfPicked, 1)\n\n  return fetchedDataCopy // {picked: \"\", articles: [], subCats: []}\n}\n","import React, { useState, useRef } from 'react'\nimport { AppContainer, GlobalStyle } from './App.styled'\n\n// components\nimport { TitleInput } from './components/TitleInput/TitleInput'\nimport { Recommendations } from './components/Recommendations/Recommendations'\n\n// util functions\nimport { recommendedFunc } from './utils/recommendedFunc'\nimport { newCat } from './utils/newCat'\nimport { anotherSubCat } from './utils/anotherSubCat'\n\n// If an ERROR is received after submiting is it likely that it was done through form submit instead of pressing recommendations\n// See this issue https://github.com/Deohgu/random-wikipedia-of/issues/13\n\nexport const App = () => {\n  const [inputData, setInputData] = useState('')\n  const [prevInputData, setPrevInputData] = useState('')\n  const [recommendedArr, setRecommendedArr] = useState([])\n  const [fetchedData, setFetchedData] = useState({\n    picked: 'Random',\n    articles: [],\n    subCats: []\n  })\n\n  // Call API fetching funcs and handles the received data\n  const submitData = async (dataToFetch) => {\n    if (dataToFetch !== '' && dataToFetch !== prevInputData) {\n      // fetches a new category with articles and subcategories\n      const newData = await newCat(dataToFetch)\n      setPrevInputData(dataToFetch)\n      setFetchedData(newData)\n    } else if (dataToFetch !== '' && dataToFetch === prevInputData) {\n      // fetchs more articles from a another subcategory\n      const newData = await anotherSubCat(fetchedData) // parameter expects old data to add more {picked: \"\", articles: [], subCats: []}\n      setFetchedData(newData)\n    }\n  }\n\n  // Data handler for new form inputs, buttons pressed, and form submit\n  const fetchHandler = async (input, shouldSubmit) => {\n    input !== inputData && setInputData(input) // Sets inputData when it receives a *new* input\n    if (input) {\n      if (input !== inputData) {\n        const dataTransf = await recommendedFunc(input) // Fetches recommendations if a new input was passed\n        setRecommendedArr(dataTransf) // displays new recommendations\n      }\n      shouldSubmit && submitData(input) // when shouldSubmit true it fetches the data for that input\n    } else {\n      setRecommendedArr([]) // clears recommendations if input does not exist = user deleted\n    }\n  }\n\n  // onClick in recommendations will focus on input\n  const inputFocus = useRef(null)\n  const focusHandler = () => {\n    inputFocus.current.focus()\n  }\n\n  return (\n    <AppContainer>\n      <GlobalStyle />\n      <TitleInput\n        inputData={inputData}\n        fetchedData={fetchedData}\n        recommendedArr={recommendedArr}\n        fetchHandler={fetchHandler}\n        inputFocus={inputFocus}\n      />\n      <Recommendations\n        recommendedArr={recommendedArr}\n        fetchHandler={fetchHandler}\n        focusHandler={focusHandler}\n      />\n    </AppContainer>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { App } from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}